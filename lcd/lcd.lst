;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 10/09/2024 17:58:29
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF67  	GOTO        206
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_enable_pulse:
;lcd.c,76 :: 		void enable_pulse(){
;lcd.c,77 :: 		LATE |= 1;
0x001C	0x808D      	BSF         LATE, 0 
;lcd.c,78 :: 		delay_ms(50);
0x001E	0x0E02      	MOVLW       2
0x0020	0x6E0B      	MOVWF       R11, 0
0x0022	0x0E45      	MOVLW       69
0x0024	0x6E0C      	MOVWF       R12, 0
0x0026	0x0EA9      	MOVLW       169
0x0028	0x6E0D      	MOVWF       R13, 0
L_enable_pulse1:
0x002A	0x2E0D      	DECFSZ      R13, 1, 0
0x002C	0xD7FE      	BRA         L_enable_pulse1
0x002E	0x2E0C      	DECFSZ      R12, 1, 0
0x0030	0xD7FC      	BRA         L_enable_pulse1
0x0032	0x2E0B      	DECFSZ      R11, 1, 0
0x0034	0xD7FA      	BRA         L_enable_pulse1
0x0036	0x0000      	NOP
0x0038	0x0000      	NOP
;lcd.c,79 :: 		LATE &= 254;
0x003A	0x0EFE      	MOVLW       254
0x003C	0x168D      	ANDWF       LATE, 1 
;lcd.c,80 :: 		delay_ms(50);
0x003E	0x0E02      	MOVLW       2
0x0040	0x6E0B      	MOVWF       R11, 0
0x0042	0x0E45      	MOVLW       69
0x0044	0x6E0C      	MOVWF       R12, 0
0x0046	0x0EA9      	MOVLW       169
0x0048	0x6E0D      	MOVWF       R13, 0
L_enable_pulse2:
0x004A	0x2E0D      	DECFSZ      R13, 1, 0
0x004C	0xD7FE      	BRA         L_enable_pulse2
0x004E	0x2E0C      	DECFSZ      R12, 1, 0
0x0050	0xD7FC      	BRA         L_enable_pulse2
0x0052	0x2E0B      	DECFSZ      R11, 1, 0
0x0054	0xD7FA      	BRA         L_enable_pulse2
0x0056	0x0000      	NOP
0x0058	0x0000      	NOP
;lcd.c,81 :: 		}
L_end_enable_pulse:
0x005A	0x0012      	RETURN      0
; end of _enable_pulse
_write_lcd:
;lcd.c,83 :: 		void write_lcd(){
;lcd.c,84 :: 		for(index = 0; index < 17; index++){
0x005C	0x6A15      	CLRF        _index 
0x005E	0x6A16      	CLRF        _index+1 
L_write_lcd3:
0x0060	0x0E80      	MOVLW       128
0x0062	0x1816      	XORWF       _index+1, 0 
0x0064	0x6E00      	MOVWF       R0 
0x0066	0x0E80      	MOVLW       128
0x0068	0x5C00      	SUBWF       R0, 0 
0x006A	0xE102      	BNZ         L__write_lcd10
0x006C	0x0E11      	MOVLW       17
0x006E	0x5C15      	SUBWF       _index, 0 
L__write_lcd10:
0x0070	0xE20D      	BC          L_write_lcd4
;lcd.c,85 :: 		LATE |= 4;
0x0072	0x848D      	BSF         LATE, 2 
;lcd.c,86 :: 		LATD = myWord[index];
0x0074	0x0E17      	MOVLW       _myWord
0x0076	0x2415      	ADDWF       _index, 0 
0x0078	0x6EE9      	MOVWF       FSR0L 
0x007A	0x0E00      	MOVLW       hi_addr(_myWord)
0x007C	0x2016      	ADDWFC      _index+1, 0 
0x007E	0x6EEA      	MOVWF       FSR0L+1 
0x0080	0xFF8CCFEE  	MOVFF       POSTINC0, LATD
;lcd.c,87 :: 		enable_pulse();
0x0084	0xDFCB      	RCALL       _enable_pulse
;lcd.c,84 :: 		for(index = 0; index < 17; index++){
0x0086	0x4A15      	INFSNZ      _index, 1 
0x0088	0x2A16      	INCF        _index+1, 1 
;lcd.c,89 :: 		}
0x008A	0xD7EA      	BRA         L_write_lcd3
L_write_lcd4:
;lcd.c,92 :: 		}
L_end_write_lcd:
0x008C	0x0012      	RETURN      0
; end of _write_lcd
_init_lcd:
;lcd.c,58 :: 		void init_lcd(){
;lcd.c,59 :: 		TRISE &= 248;
0x008E	0x0EF8      	MOVLW       248
0x0090	0x1696      	ANDWF       TRISE, 1 
;lcd.c,60 :: 		TRISD  = 0;
0x0092	0x6A95      	CLRF        TRISD 
;lcd.c,61 :: 		LATE  &= 248;
0x0094	0x0EF8      	MOVLW       248
0x0096	0x168D      	ANDWF       LATE, 1 
;lcd.c,62 :: 		delay_ms(10);
0x0098	0x0E41      	MOVLW       65
0x009A	0x6E0C      	MOVWF       R12, 0
0x009C	0x0EEE      	MOVLW       238
0x009E	0x6E0D      	MOVWF       R13, 0
L_init_lcd0:
0x00A0	0x2E0D      	DECFSZ      R13, 1, 0
0x00A2	0xD7FE      	BRA         L_init_lcd0
0x00A4	0x2E0C      	DECFSZ      R12, 1, 0
0x00A6	0xD7FC      	BRA         L_init_lcd0
0x00A8	0x0000      	NOP
;lcd.c,65 :: 		LATD  = 0b00111000;
0x00AA	0x0E38      	MOVLW       56
0x00AC	0x6E8C      	MOVWF       LATD 
;lcd.c,66 :: 		enable_pulse();
0x00AE	0xDFB6      	RCALL       _enable_pulse
;lcd.c,68 :: 		LATD = 0b00001111;
0x00B0	0x0E0F      	MOVLW       15
0x00B2	0x6E8C      	MOVWF       LATD 
;lcd.c,69 :: 		enable_pulse();
0x00B4	0xDFB3      	RCALL       _enable_pulse
;lcd.c,70 :: 		LATD = 0b00111010;
0x00B6	0x0E3A      	MOVLW       58
0x00B8	0x6E8C      	MOVWF       LATD 
;lcd.c,71 :: 		enable_pulse();
0x00BA	0xDFB0      	RCALL       _enable_pulse
;lcd.c,74 :: 		}
L_end_init_lcd:
0x00BC	0x0012      	RETURN      0
; end of _init_lcd
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x00BE	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x00C0	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x00C4	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x00C6	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x00C8	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x00CA	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x00CC	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x00CE	0xF000EC9F  	CALL        318, 0
;lcd.c,9 :: 		void main() {
;lcd.c,12 :: 		init_lcd();
0x00D2	0xDFDD      	RCALL       _init_lcd
;lcd.c,13 :: 		write_lcd();
0x00D4	0xDFC3      	RCALL       _write_lcd
;lcd.c,53 :: 		}
L_end_main:
0x00D6	0xD7FF      	BRA         $+0
; end of _main
0x013E	0xF015EE10  	LFSR        1, 21
0x0142	0x0E66      	MOVLW       102
0x0144	0x6E00      	MOVWF       R0 
0x0146	0x0E01      	MOVLW       1
0x0148	0x6E01      	MOVWF       R1 
0x014A	0x0ED8      	MOVLW       216
0x014C	0x6EF6      	MOVWF       4086 
0x014E	0x0E00      	MOVLW       0
0x0150	0x6EF7      	MOVWF       TBLPTRH 
0x0152	0x0E00      	MOVLW       0
0x0154	0x6EF8      	MOVWF       TBLPTRU 
0x0156	0xF000EC5F  	CALL        190, 0
0x015A	0x0012      	RETURN      0
;lcd.c,0 :: ?ICS_index
0x00D8	0x0000 ;?ICS_index+0
; end of ?ICS_index
;lcd.c,0 :: ?ICS_myWord
0x00DA	0x6F47 ;?ICS_myWord+0
0x00DC	0x646F ;?ICS_myWord+2
0x00DE	0x7962 ;?ICS_myWord+4
0x00E0	0x2C65 ;?ICS_myWord+6
0x00E2	0x5720 ;?ICS_myWord+8
0x00E4	0x726F ;?ICS_myWord+10
0x00E6	0x646C ;?ICS_myWord+12
0x00E8	0x0021 ;?ICS_myWord+14
0x00EA	0x0000 ;?ICS_myWord+16
0x00EC	0x0000 ;?ICS_myWord+18
0x00EE	0x0000 ;?ICS_myWord+20
0x00F0	0x0000 ;?ICS_myWord+22
0x00F2	0x0000 ;?ICS_myWord+24
0x00F4	0x0000 ;?ICS_myWord+26
0x00F6	0x0000 ;?ICS_myWord+28
0x00F8	0x0000 ;?ICS_myWord+30
0x00FA	0x0000 ;?ICS_myWord+32
0x00FC	0x0000 ;?ICS_myWord+34
0x00FE	0x0000 ;?ICS_myWord+36
0x0100	0x0000 ;?ICS_myWord+38
0x0102	0x0000 ;?ICS_myWord+40
0x0104	0x0000 ;?ICS_myWord+42
0x0106	0x0000 ;?ICS_myWord+44
0x0108	0x0000 ;?ICS_myWord+46
0x010A	0x0000 ;?ICS_myWord+48
0x010C	0x0000 ;?ICS_myWord+50
0x010E	0x0000 ;?ICS_myWord+52
0x0110	0x0000 ;?ICS_myWord+54
0x0112	0x0000 ;?ICS_myWord+56
0x0114	0x0000 ;?ICS_myWord+58
0x0116	0x0000 ;?ICS_myWord+60
0x0118	0x0000 ;?ICS_myWord+62
0x011A	0x0000 ;?ICS_myWord+64
0x011C	0x0000 ;?ICS_myWord+66
0x011E	0x0000 ;?ICS_myWord+68
0x0120	0x0000 ;?ICS_myWord+70
0x0122	0x0000 ;?ICS_myWord+72
0x0124	0x0000 ;?ICS_myWord+74
0x0126	0x0000 ;?ICS_myWord+76
0x0128	0x0000 ;?ICS_myWord+78
0x012A	0x0000 ;?ICS_myWord+80
0x012C	0x0000 ;?ICS_myWord+82
0x012E	0x0000 ;?ICS_myWord+84
0x0130	0x0000 ;?ICS_myWord+86
0x0132	0x0000 ;?ICS_myWord+88
0x0134	0x0000 ;?ICS_myWord+90
0x0136	0x0000 ;?ICS_myWord+92
0x0138	0x0000 ;?ICS_myWord+94
0x013A	0x0000 ;?ICS_myWord+96
0x013C	0x0000 ;?ICS_myWord+98
; end of ?ICS_myWord
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [64]    _enable_pulse
0x005C      [50]    _write_lcd
0x008E      [48]    _init_lcd
0x00BE      [16]    ___CC2DW
0x00CE      [10]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [2]    _index
0x0017     [100]    _myWord
0x0F8C       [1]    LATD
0x0F8D       [1]    LATE
0x0F95       [1]    TRISD
0x0F96       [1]    TRISE
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x00D8       [2]    ?ICS_index
0x00DA     [100]    ?ICS_myWord
