;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 07/09/2024 09:18:35
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF1F  	GOTO        62
_interrupt:
;interrupt.c,26 :: 		void interrupt(void){
0x0008	0xF016C00C  	MOVFF       R12, 22
0x000C	0xF015C00D  	MOVFF       R13, 21
;interrupt.c,27 :: 		if(INTCON.INT0IF){
0x0010	0xA2F2      	BTFSS       INTCON, 1 
0x0012	0xD00B      	BRA         L_interrupt4
;interrupt.c,28 :: 		LATA         ^= 2;
0x0014	0x7289      	BTG         LATA, 1 
;interrupt.c,29 :: 		delay_ms(10);
0x0016	0x0E41      	MOVLW       65
0x0018	0x6E0C      	MOVWF       R12, 0
0x001A	0x0EEE      	MOVLW       238
0x001C	0x6E0D      	MOVWF       R13, 0
L_interrupt5:
0x001E	0x2E0D      	DECFSZ      R13, 1, 0
0x0020	0xD7FE      	BRA         L_interrupt5
0x0022	0x2E0C      	DECFSZ      R12, 1, 0
0x0024	0xD7FC      	BRA         L_interrupt5
0x0026	0x0000      	NOP
;interrupt.c,30 :: 		INTCON.INT0IF = 0;
0x0028	0x92F2      	BCF         INTCON, 1 
;interrupt.c,31 :: 		}
L_interrupt4:
;interrupt.c,33 :: 		}
L_end_interrupt:
L__interrupt9:
0x002A	0xF00CC016  	MOVFF       22, R12
0x002E	0xF00DC015  	MOVFF       21, R13
0x0032	0x0011      	RETFIE      1
; end of _interrupt
_init_interrupt:
;interrupt.c,18 :: 		void init_interrupt(){
;interrupt.c,19 :: 		INTCON2.INTEDG0 = 1; //rising edge external interrupt 0
0x0034	0x8CF1      	BSF         INTCON2, 6 
;interrupt.c,20 :: 		INTCON.INT0IE   = 1; //enables int0 external interrupt
0x0036	0x88F2      	BSF         INTCON, 4 
;interrupt.c,21 :: 		INTCON.INT0IF   = 0; //interrupt flag, mut be cleared always when theres a interrupt
0x0038	0x92F2      	BCF         INTCON, 1 
;interrupt.c,22 :: 		INTCON.GIEH     = 1; //enable global interrupts
0x003A	0x8EF2      	BSF         INTCON, 7 
;interrupt.c,24 :: 		}
L_end_init_interrupt:
0x003C	0x0012      	RETURN      0
; end of _init_interrupt
_main:
;interrupt.c,3 :: 		void main() {
;interrupt.c,5 :: 		ADCON1 |= 15;
0x003E	0x0E0F      	MOVLW       15
0x0040	0x12C1      	IORWF       ADCON1, 1 
;interrupt.c,6 :: 		TRISA  &= 252;
0x0042	0x0EFC      	MOVLW       252
0x0044	0x1692      	ANDWF       TRISA, 1 
;interrupt.c,7 :: 		TRISB  |= 1;
0x0046	0x8093      	BSF         TRISB, 0 
;interrupt.c,8 :: 		INTCON2.RBPU = 1; //disable internal pullups for port b
0x0048	0x8EF1      	BSF         INTCON2, 7 
;interrupt.c,9 :: 		init_interrupt();
0x004A	0xDFF4      	RCALL       _init_interrupt
;interrupt.c,11 :: 		for(;;){
L_main0:
;interrupt.c,12 :: 		LATA ^= 1;
0x004C	0x7089      	BTG         LATA, 0 
;interrupt.c,13 :: 		delay_ms(1000);
0x004E	0x0E1A      	MOVLW       26
0x0050	0x6E0B      	MOVWF       R11, 0
0x0052	0x0E5E      	MOVLW       94
0x0054	0x6E0C      	MOVWF       R12, 0
0x0056	0x0E6E      	MOVLW       110
0x0058	0x6E0D      	MOVWF       R13, 0
L_main3:
0x005A	0x2E0D      	DECFSZ      R13, 1, 0
0x005C	0xD7FE      	BRA         L_main3
0x005E	0x2E0C      	DECFSZ      R12, 1, 0
0x0060	0xD7FC      	BRA         L_main3
0x0062	0x2E0B      	DECFSZ      R11, 1, 0
0x0064	0xD7FA      	BRA         L_main3
0x0066	0x0000      	NOP
;interrupt.c,14 :: 		}
0x0068	0xD7F1      	BRA         L_main0
;interrupt.c,16 :: 		}
L_end_main:
0x006A	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [44]    _interrupt
0x0034      [10]    _init_interrupt
0x003E      [46]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0F89       [1]    LATA
0x0F92       [1]    TRISA
0x0F93       [1]    TRISB
0x0FC1       [1]    ADCON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
