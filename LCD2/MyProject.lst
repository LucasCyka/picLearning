;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 17/09/2024 18:32:12
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF81  	GOTO        258
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_enable_pulse:
;main.c,65 :: 		void enable_pulse(){
;main.c,66 :: 		LATE |= 4;
0x001C	0x848D      	BSF         LATE, 2 
;main.c,67 :: 		delay_ms(30);
0x001E	0x0EC3      	MOVLW       195
0x0020	0x6E0C      	MOVWF       R12, 0
0x0022	0x0ECD      	MOVLW       205
0x0024	0x6E0D      	MOVWF       R13, 0
L_enable_pulse8:
0x0026	0x2E0D      	DECFSZ      R13, 1, 0
0x0028	0xD7FE      	BRA         L_enable_pulse8
0x002A	0x2E0C      	DECFSZ      R12, 1, 0
0x002C	0xD7FC      	BRA         L_enable_pulse8
;main.c,68 :: 		LATE &= 251;
0x002E	0x0EFB      	MOVLW       251
0x0030	0x168D      	ANDWF       LATE, 1 
;main.c,69 :: 		delay_ms(30);
0x0032	0x0EC3      	MOVLW       195
0x0034	0x6E0C      	MOVWF       R12, 0
0x0036	0x0ECD      	MOVLW       205
0x0038	0x6E0D      	MOVWF       R13, 0
L_enable_pulse9:
0x003A	0x2E0D      	DECFSZ      R13, 1, 0
0x003C	0xD7FE      	BRA         L_enable_pulse9
0x003E	0x2E0C      	DECFSZ      R12, 1, 0
0x0040	0xD7FC      	BRA         L_enable_pulse9
;main.c,71 :: 		}
L_end_enable_pulse:
0x0042	0x0012      	RETURN      0
; end of _enable_pulse
_enableCursor:
;main.c,73 :: 		void enableCursor(){
;main.c,74 :: 		LATE = 0;
0x0044	0x6A8D      	CLRF        LATE 
;main.c,75 :: 		LATD = 0x0F;
0x0046	0x0E0F      	MOVLW       15
0x0048	0x6E8C      	MOVWF       LATD 
;main.c,76 :: 		enable_pulse();
0x004A	0xDFE8      	RCALL       _enable_pulse
;main.c,77 :: 		}
L_end_enableCursor:
0x004C	0x0012      	RETURN      0
; end of _enableCursor
_clear:
;main.c,79 :: 		void clear(){
;main.c,80 :: 		LATE = 0;
0x004E	0x6A8D      	CLRF        LATE 
;main.c,81 :: 		LATD = 0x01;
0x0050	0x0E01      	MOVLW       1
0x0052	0x6E8C      	MOVWF       LATD 
;main.c,82 :: 		enable_pulse();
0x0054	0xDFE3      	RCALL       _enable_pulse
;main.c,83 :: 		}
L_end_clear:
0x0056	0x0012      	RETURN      0
; end of _clear
_cursorHome:
;main.c,85 :: 		void cursorHome(){
;main.c,86 :: 		LATE = 0;
0x0058	0x6A8D      	CLRF        LATE 
;main.c,87 :: 		LATD = 0x02;
0x005A	0x0E02      	MOVLW       2
0x005C	0x6E8C      	MOVWF       LATD 
;main.c,88 :: 		enable_pulse();
0x005E	0xDFDE      	RCALL       _enable_pulse
;main.c,89 :: 		}
L_end_cursorHome:
0x0060	0x0012      	RETURN      0
; end of _cursorHome
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0062	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0064	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0068	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x006A	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x006C	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x006E	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0070	0x0012      	RETURN      0
; end of ___CC2DW
_init_lcd:
;main.c,51 :: 		void init_lcd(){
;main.c,52 :: 		delay_ms(15);
0x0072	0x0E62      	MOVLW       98
0x0074	0x6E0C      	MOVWF       R12, 0
0x0076	0x0E65      	MOVLW       101
0x0078	0x6E0D      	MOVWF       R13, 0
L_init_lcd6:
0x007A	0x2E0D      	DECFSZ      R13, 1, 0
0x007C	0xD7FE      	BRA         L_init_lcd6
0x007E	0x2E0C      	DECFSZ      R12, 1, 0
0x0080	0xD7FC      	BRA         L_init_lcd6
0x0082	0x0000      	NOP
0x0084	0x0000      	NOP
;main.c,53 :: 		LATD = 0x38;
0x0086	0x0E38      	MOVLW       56
0x0088	0x6E8C      	MOVWF       LATD 
;main.c,54 :: 		enable_pulse();
0x008A	0xDFC8      	RCALL       _enable_pulse
;main.c,55 :: 		delay_ms(1);
0x008C	0x0E07      	MOVLW       7
0x008E	0x6E0C      	MOVWF       R12, 0
0x0090	0x0E7D      	MOVLW       125
0x0092	0x6E0D      	MOVWF       R13, 0
L_init_lcd7:
0x0094	0x2E0D      	DECFSZ      R13, 1, 0
0x0096	0xD7FE      	BRA         L_init_lcd7
0x0098	0x2E0C      	DECFSZ      R12, 1, 0
0x009A	0xD7FC      	BRA         L_init_lcd7
;main.c,56 :: 		LATD = 0x38;
0x009C	0x0E38      	MOVLW       56
0x009E	0x6E8C      	MOVWF       LATD 
;main.c,57 :: 		enable_pulse();
0x00A0	0xDFBD      	RCALL       _enable_pulse
;main.c,59 :: 		enableCursor();
0x00A2	0xDFD0      	RCALL       _enableCursor
;main.c,60 :: 		clear();
0x00A4	0xDFD4      	RCALL       _clear
;main.c,61 :: 		cursorHome();
0x00A6	0xDFD8      	RCALL       _cursorHome
;main.c,63 :: 		}
L_end_init_lcd:
0x00A8	0x0012      	RETURN      0
; end of _init_lcd
_writeLCD:
;main.c,91 :: 		void writeLCD(char value[16]){
;main.c,92 :: 		int index = 0;
0x00AA	0x6A23      	CLRF        writeLCD_index_L0 
0x00AC	0x6A24      	CLRF        writeLCD_index_L0+1 
;main.c,93 :: 		LATE |= 1;
0x00AE	0x808D      	BSF         LATE, 0 
;main.c,96 :: 		for(index = 0; index < 15; index++){
0x00B0	0x6A23      	CLRF        writeLCD_index_L0 
0x00B2	0x6A24      	CLRF        writeLCD_index_L0+1 
L_writeLCD10:
0x00B4	0x0E80      	MOVLW       128
0x00B6	0x1824      	XORWF       writeLCD_index_L0+1, 0 
0x00B8	0x6E00      	MOVWF       R0 
0x00BA	0x0E80      	MOVLW       128
0x00BC	0x5C00      	SUBWF       R0, 0 
0x00BE	0xE102      	BNZ         L__writeLCD21
0x00C0	0x0E0F      	MOVLW       15
0x00C2	0x5C23      	SUBWF       writeLCD_index_L0, 0 
L__writeLCD21:
0x00C4	0xE21D      	BC          L_writeLCD11
;main.c,97 :: 		if(value[index] == '|'){
0x00C6	0x5023      	MOVF        writeLCD_index_L0, 0 
0x00C8	0x2421      	ADDWF       FARG_writeLCD_value, 0 
0x00CA	0x6EE9      	MOVWF       FSR0L 
0x00CC	0x5024      	MOVF        writeLCD_index_L0+1, 0 
0x00CE	0x2022      	ADDWFC      FARG_writeLCD_value+1, 0 
0x00D0	0x6EEA      	MOVWF       FSR0L+1 
0x00D2	0x50EE      	MOVF        POSTINC0, 0 
0x00D4	0x0A7C      	XORLW       124
0x00D6	0xE104      	BNZ         L_writeLCD13
;main.c,98 :: 		index = 16;
0x00D8	0x0E10      	MOVLW       16
0x00DA	0x6E23      	MOVWF       writeLCD_index_L0 
0x00DC	0x0E00      	MOVLW       0
0x00DE	0x6E24      	MOVWF       writeLCD_index_L0+1 
;main.c,99 :: 		}
L_writeLCD13:
;main.c,100 :: 		LATD = (int)value[index];
0x00E0	0x5023      	MOVF        writeLCD_index_L0, 0 
0x00E2	0x2421      	ADDWF       FARG_writeLCD_value, 0 
0x00E4	0x6EE9      	MOVWF       FSR0L 
0x00E6	0x5024      	MOVF        writeLCD_index_L0+1, 0 
0x00E8	0x2022      	ADDWFC      FARG_writeLCD_value+1, 0 
0x00EA	0x6EEA      	MOVWF       FSR0L+1 
0x00EC	0xF000CFEE  	MOVFF       POSTINC0, R0
0x00F0	0x0E00      	MOVLW       0
0x00F2	0x6E01      	MOVWF       R1 
0x00F4	0xFF8CC000  	MOVFF       R0, LATD
;main.c,101 :: 		enable_pulse();
0x00F8	0xDF91      	RCALL       _enable_pulse
;main.c,96 :: 		for(index = 0; index < 15; index++){
0x00FA	0x4A23      	INFSNZ      writeLCD_index_L0, 1 
0x00FC	0x2A24      	INCF        writeLCD_index_L0+1, 1 
;main.c,103 :: 		}
0x00FE	0xD7DA      	BRA         L_writeLCD10
L_writeLCD11:
;main.c,106 :: 		}
L_end_writeLCD:
0x0100	0x0012      	RETURN      0
; end of _writeLCD
_main:
0x0102	0x0E53      	MOVLW       83
0x0104	0x6E15      	MOVWF       ?lstr1_main 
0x0106	0x0E45      	MOVLW       69
0x0108	0x6E16      	MOVWF       22 
0x010A	0x0E43      	MOVLW       67
0x010C	0x6E17      	MOVWF       23 
0x010E	0x0E4F      	MOVLW       79
0x0110	0x6E18      	MOVWF       24 
0x0112	0x0E4E      	MOVLW       78
0x0114	0x6E19      	MOVWF       25 
0x0116	0x0E44      	MOVLW       68
0x0118	0x6E1A      	MOVWF       26 
0x011A	0x0E53      	MOVLW       83
0x011C	0x6E1B      	MOVWF       27 
0x011E	0x0E7C      	MOVLW       124
0x0120	0x6E1C      	MOVWF       28 
0x0122	0x6A1D      	CLRF        29 
;main.c,12 :: 		void main() {
;main.c,14 :: 		TRISE &= 248;
0x0124	0x0EF8      	MOVLW       248
0x0126	0x1696      	ANDWF       TRISE, 1 
;main.c,15 :: 		TRISD  = 0;
0x0128	0x6A95      	CLRF        TRISD 
;main.c,16 :: 		LATE = 0;
0x012A	0x6A8D      	CLRF        LATE 
;main.c,17 :: 		seconds[0] = '0';
0x012C	0x0E30      	MOVLW       48
0x012E	0x6E1E      	MOVWF       main_seconds_L0 
;main.c,18 :: 		seconds[1] = '0';
0x0130	0x0E30      	MOVLW       48
0x0132	0x6E1F      	MOVWF       main_seconds_L0+1 
;main.c,19 :: 		seconds[2] = '|';
0x0134	0x0E7C      	MOVLW       124
0x0136	0x6E20      	MOVWF       main_seconds_L0+2 
;main.c,21 :: 		init_lcd();
0x0138	0xDF9C      	RCALL       _init_lcd
;main.c,23 :: 		for(;;){
L_main0:
;main.c,26 :: 		writeLCD(seconds);
0x013A	0x0E1E      	MOVLW       main_seconds_L0
0x013C	0x6E21      	MOVWF       FARG_writeLCD_value 
0x013E	0x0E00      	MOVLW       hi_addr(main_seconds_L0)
0x0140	0x6E22      	MOVWF       FARG_writeLCD_value+1 
0x0142	0xDFB3      	RCALL       _writeLCD
;main.c,29 :: 		WriteLCD("SECONDS|");
0x0144	0x0E15      	MOVLW       ?lstr1_main
0x0146	0x6E21      	MOVWF       FARG_writeLCD_value 
0x0148	0x0E00      	MOVLW       hi_addr(?lstr1_main)
0x014A	0x6E22      	MOVWF       FARG_writeLCD_value+1 
0x014C	0xDFAE      	RCALL       _writeLCD
;main.c,30 :: 		seconds[1]++;
0x014E	0x2A1F      	INCF        main_seconds_L0+1, 1 
;main.c,31 :: 		if (seconds[1] == ':'){
0x0150	0x501F      	MOVF        main_seconds_L0+1, 0 
0x0152	0x0A3A      	XORLW       58
0x0154	0xE103      	BNZ         L_main3
;main.c,32 :: 		seconds[1] = '0';
0x0156	0x0E30      	MOVLW       48
0x0158	0x6E1F      	MOVWF       main_seconds_L0+1 
;main.c,33 :: 		seconds[0]++;
0x015A	0x2A1E      	INCF        main_seconds_L0, 1 
;main.c,34 :: 		}
L_main3:
;main.c,37 :: 		if(seconds[0] == '6'){
0x015C	0x501E      	MOVF        main_seconds_L0, 0 
0x015E	0x0A36      	XORLW       54
0x0160	0xE102      	BNZ         L_main4
;main.c,38 :: 		seconds[0] = '0';
0x0162	0x0E30      	MOVLW       48
0x0164	0x6E1E      	MOVWF       main_seconds_L0 
;main.c,39 :: 		}
L_main4:
;main.c,44 :: 		delay_ms(100);
0x0166	0x0E03      	MOVLW       3
0x0168	0x6E0B      	MOVWF       R11, 0
0x016A	0x0E8A      	MOVLW       138
0x016C	0x6E0C      	MOVWF       R12, 0
0x016E	0x0E55      	MOVLW       85
0x0170	0x6E0D      	MOVWF       R13, 0
L_main5:
0x0172	0x2E0D      	DECFSZ      R13, 1, 0
0x0174	0xD7FE      	BRA         L_main5
0x0176	0x2E0C      	DECFSZ      R12, 1, 0
0x0178	0xD7FC      	BRA         L_main5
0x017A	0x2E0B      	DECFSZ      R11, 1, 0
0x017C	0xD7FA      	BRA         L_main5
0x017E	0x0000      	NOP
0x0180	0x0000      	NOP
;main.c,45 :: 		clear();
0x0182	0xDF65      	RCALL       _clear
;main.c,46 :: 		cursorHome();
0x0184	0xDF69      	RCALL       _cursorHome
;main.c,48 :: 		}
0x0186	0xD7D9      	BRA         L_main0
;main.c,49 :: 		}
L_end_main:
0x0188	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [40]    _enable_pulse
0x0044      [10]    _enableCursor
0x004E      [10]    _clear
0x0058      [10]    _cursorHome
0x0062      [16]    ___CC2DW
0x0072      [56]    _init_lcd
0x00AA      [88]    _writeLCD
0x0102     [136]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [9]    ?lstr1_main
0x001E       [3]    main_seconds_L0
0x0021       [2]    FARG_writeLCD_value
0x0023       [2]    writeLCD_index_L0
0x0F8C       [1]    LATD
0x0F8D       [1]    LATE
0x0F95       [1]    TRISD
0x0F96       [1]    TRISE
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
