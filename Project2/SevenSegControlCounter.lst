;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 31/08/2024 16:28:01
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF59  	GOTO        178
_interrupt:
;main.c,46 :: 		void interrupt(){
0x0008	0xF018C000  	MOVFF       R0, 24
0x000C	0xF017C001  	MOVFF       R1, 23
0x0010	0xF016C002  	MOVFF       R2, 22
0x0014	0xF015C00B  	MOVFF       R11, 21
;main.c,47 :: 		INTCON.INT0IF = 0;
0x0018	0x92F2      	BCF         INTCON, 1 
;main.c,49 :: 		modifier *= -1;
0x001A	0xF000C023  	MOVFF       _modifier, R0
0x001E	0xF001C024  	MOVFF       _modifier+1, R1
0x0022	0x0EFF      	MOVLW       255
0x0024	0x6E04      	MOVWF       R4 
0x0026	0x0EFF      	MOVLW       255
0x0028	0x6E05      	MOVWF       R5 
0x002A	0xD813      	RCALL       _Mul_16X16_U
0x002C	0xF023C000  	MOVFF       R0, _modifier
0x0030	0xF024C001  	MOVFF       R1, _modifier+1
;main.c,52 :: 		}
L_end_interrupt:
L__interrupt12:
0x0034	0xF000C018  	MOVFF       24, R0
0x0038	0xF001C017  	MOVFF       23, R1
0x003C	0xF002C016  	MOVFF       22, R2
0x0040	0xF00BC015  	MOVFF       21, R11
0x0044	0x0011      	RETFIE      1
; end of _interrupt
_init_interrupt:
;main.c,36 :: 		void init_interrupt(){
;main.c,37 :: 		INTCON.INT0IF = 0; //clear interrupt flag
0x0046	0x92F2      	BCF         INTCON, 1 
;main.c,38 :: 		INTCON2.INTEDG0 = 0; //interrupt 0 uses falling edge
0x0048	0x9CF1      	BCF         INTCON2, 6 
;main.c,39 :: 		INTCON.INT0IE = 1;//enables INT0 external interrupt
0x004A	0x88F2      	BSF         INTCON, 4 
;main.c,40 :: 		INTCON.INT0IF = 0; //clear interrupt flag
0x004C	0x92F2      	BCF         INTCON, 1 
;main.c,41 :: 		INTCON.GIEH = 1; //enables global interrupts
0x004E	0x8EF2      	BSF         INTCON, 7 
;main.c,44 :: 		}
L_end_init_interrupt:
0x0050	0x0012      	RETURN      0
; end of _init_interrupt
_Mul_16X16_U:
;__Lib_Math.c,440 :: 		
;__Lib_Math.c,447 :: 		
0x0052	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,448 :: 		
0x0054	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,449 :: 		
0x0056	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,450 :: 		
0x0058	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,451 :: 		
0x005A	0x0204      	MULWF       R4, 0
;__Lib_Math.c,453 :: 		
0x005C	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,454 :: 		
0x0060	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,455 :: 		
0x0064	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,456 :: 		
0x0066	0x0205      	MULWF       R5, 0
;__Lib_Math.c,458 :: 		
0x0068	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,459 :: 		
0x006C	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,460 :: 		
0x0070	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,461 :: 		
0x0072	0x0205      	MULWF       R5, 0
;__Lib_Math.c,463 :: 		
0x0074	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,464 :: 		
0x0076	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,465 :: 		
0x0078	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,466 :: 		
0x007A	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,467 :: 		
0x007C	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,468 :: 		
0x007E	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,469 :: 		
0x0080	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,470 :: 		
0x0082	0x0204      	MULWF       R4, 0
;__Lib_Math.c,472 :: 		
0x0084	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,473 :: 		
0x0086	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,474 :: 		
0x0088	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,475 :: 		
0x008A	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,476 :: 		
0x008C	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,477 :: 		
0x008E	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,479 :: 		
0x0090	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,480 :: 		
0x0094	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,481 :: 		
0x0098	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,482 :: 		
0x009C	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,485 :: 		
L_end_Mul_16X16_U:
0x00A0	0x0012      	RETURN      0
; end of _Mul_16X16_U
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x00A2	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x00A4	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x00A8	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x00AA	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x00AC	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x00AE	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x00B0	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x00B2	0x0E3F      	MOVLW       63
0x00B4	0x6E19      	MOVWF       _numCodes 
0x00B6	0x0E06      	MOVLW       6
0x00B8	0x6E1A      	MOVWF       26 
0x00BA	0x0E5B      	MOVLW       91
0x00BC	0x6E1B      	MOVWF       27 
0x00BE	0x0E4F      	MOVLW       79
0x00C0	0x6E1C      	MOVWF       28 
0x00C2	0x0E66      	MOVLW       102
0x00C4	0x6E1D      	MOVWF       29 
0x00C6	0x0E6D      	MOVLW       109
0x00C8	0x6E1E      	MOVWF       30 
0x00CA	0x0E7D      	MOVLW       125
0x00CC	0x6E1F      	MOVWF       31 
0x00CE	0x0E07      	MOVLW       7
0x00D0	0x6E20      	MOVWF       32 
0x00D2	0x0E7F      	MOVLW       127
0x00D4	0x6E21      	MOVWF       33 
0x00D6	0x0E67      	MOVLW       103
0x00D8	0x6E22      	MOVWF       34 
0x00DA	0x0EFF      	MOVLW       255
0x00DC	0x6E23      	MOVWF       _modifier 
0x00DE	0x0EFF      	MOVLW       255
0x00E0	0x6E24      	MOVWF       36 
0x00E2	0x6A25      	CLRF        _num 
0x00E4	0x6A26      	CLRF        38 
;main.c,7 :: 		void main() {
;main.c,9 :: 		ADCON1      |= 15; //sets all pins as digital i/o
0x00E6	0x0E0F      	MOVLW       15
0x00E8	0x12C1      	IORWF       ADCON1, 1 
;main.c,10 :: 		TRISB       |= 1; //sets RB0 as input
0x00EA	0x8093      	BSF         TRISB, 0 
;main.c,11 :: 		TRISD        = 0; //all pins at port d are outputs for the 7-seg
0x00EC	0x6A95      	CLRF        TRISD 
;main.c,12 :: 		INTCON2.RBPU = 0; //enable weak interal pullups for port b
0x00EE	0x9EF1      	BCF         INTCON2, 7 
;main.c,13 :: 		LATD = 0;
0x00F0	0x6A8C      	CLRF        LATD 
;main.c,15 :: 		init_interrupt();
0x00F2	0xDFA9      	RCALL       _init_interrupt
;main.c,18 :: 		for(;;){
L_main0:
;main.c,19 :: 		num += modifier;
0x00F4	0x5023      	MOVF        _modifier, 0 
0x00F6	0x2425      	ADDWF       _num, 0 
0x00F8	0x6E01      	MOVWF       R1 
0x00FA	0x5024      	MOVF        _modifier+1, 0 
0x00FC	0x2026      	ADDWFC      _num+1, 0 
0x00FE	0x6E02      	MOVWF       R2 
0x0100	0xF025C001  	MOVFF       R1, _num
0x0104	0xF026C002  	MOVFF       R2, _num+1
;main.c,20 :: 		if(num == -1) {num = 9;}
0x0108	0x0EFF      	MOVLW       255
0x010A	0x1802      	XORWF       R2, 0 
0x010C	0xE102      	BNZ         L__main8
0x010E	0x0EFF      	MOVLW       255
0x0110	0x1801      	XORWF       R1, 0 
L__main8:
0x0112	0xE105      	BNZ         L_main3
0x0114	0x0E09      	MOVLW       9
0x0116	0x6E25      	MOVWF       _num 
0x0118	0x0E00      	MOVLW       0
0x011A	0x6E26      	MOVWF       _num+1 
0x011C	0xD008      	BRA         L_main4
L_main3:
;main.c,21 :: 		else if(num == 10){num = 0;}
0x011E	0x0E00      	MOVLW       0
0x0120	0x1826      	XORWF       _num+1, 0 
0x0122	0xE102      	BNZ         L__main9
0x0124	0x0E0A      	MOVLW       10
0x0126	0x1825      	XORWF       _num, 0 
L__main9:
0x0128	0xE102      	BNZ         L_main5
0x012A	0x6A25      	CLRF        _num 
0x012C	0x6A26      	CLRF        _num+1 
L_main5:
L_main4:
;main.c,23 :: 		LATD = numCodes[num];
0x012E	0x0E19      	MOVLW       _numCodes
0x0130	0x2425      	ADDWF       _num, 0 
0x0132	0x6EE9      	MOVWF       FSR0L 
0x0134	0x0E00      	MOVLW       hi_addr(_numCodes)
0x0136	0x2026      	ADDWFC      _num+1, 0 
0x0138	0x6EEA      	MOVWF       FSR0L+1 
0x013A	0xFF8CCFEE  	MOVFF       POSTINC0, LATD
;main.c,28 :: 		delay_ms(1000);
0x013E	0x0E1A      	MOVLW       26
0x0140	0x6E0B      	MOVWF       R11, 0
0x0142	0x0E5E      	MOVLW       94
0x0144	0x6E0C      	MOVWF       R12, 0
0x0146	0x0E6E      	MOVLW       110
0x0148	0x6E0D      	MOVWF       R13, 0
L_main6:
0x014A	0x2E0D      	DECFSZ      R13, 1, 0
0x014C	0xD7FE      	BRA         L_main6
0x014E	0x2E0C      	DECFSZ      R12, 1, 0
0x0150	0xD7FC      	BRA         L_main6
0x0152	0x2E0B      	DECFSZ      R11, 1, 0
0x0154	0xD7FA      	BRA         L_main6
0x0156	0x0000      	NOP
;main.c,31 :: 		}
0x0158	0xD7CD      	BRA         L_main0
;main.c,33 :: 		}
L_end_main:
0x015A	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [62]    _interrupt
0x0046      [12]    _init_interrupt
0x0052      [80]    _Mul_16X16_U
0x00A2      [16]    ___CC2DW
0x00B2     [170]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0019      [10]    _numCodes
0x0023       [2]    _modifier
0x0025       [2]    _num
0x0F8C       [1]    LATD
0x0F93       [1]    TRISB
0x0F95       [1]    TRISD
0x0FC1       [1]    ADCON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
