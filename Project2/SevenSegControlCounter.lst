;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 02/09/2024 18:02:09
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF7D  	GOTO        250
_interrupt:
;main.c,48 :: 		void interrupt(){
0x0008	0xF01AC000  	MOVFF       R0, 26
0x000C	0xF019C001  	MOVFF       R1, 25
0x0010	0xF018C002  	MOVFF       R2, 24
0x0014	0xF017C00B  	MOVFF       R11, 23
0x0018	0xF016C00C  	MOVFF       R12, 22
0x001C	0xF015C00D  	MOVFF       R13, 21
;main.c,49 :: 		if(INTCON.INT0IF && pressed == 0){
0x0020	0xA2F2      	BTFSS       INTCON, 1 
0x0022	0xD028      	BRA         L_interrupt9
0x0024	0x0E00      	MOVLW       0
0x0026	0x1826      	XORWF       _pressed+1, 0 
0x0028	0xE102      	BNZ         L__interrupt18
0x002A	0x0E00      	MOVLW       0
0x002C	0x1825      	XORWF       _pressed, 0 
L__interrupt18:
0x002E	0xE122      	BNZ         L_interrupt9
L__interrupt11:
;main.c,50 :: 		pressed = 1;
0x0030	0x0E01      	MOVLW       1
0x0032	0x6E25      	MOVWF       _pressed 
0x0034	0x0E00      	MOVLW       0
0x0036	0x6E26      	MOVWF       _pressed+1 
;main.c,51 :: 		delay_ms(100);
0x0038	0x0E03      	MOVLW       3
0x003A	0x6E0B      	MOVWF       R11, 0
0x003C	0x0E8A      	MOVLW       138
0x003E	0x6E0C      	MOVWF       R12, 0
0x0040	0x0E55      	MOVLW       85
0x0042	0x6E0D      	MOVWF       R13, 0
L_interrupt10:
0x0044	0x2E0D      	DECFSZ      R13, 1, 0
0x0046	0xD7FE      	BRA         L_interrupt10
0x0048	0x2E0C      	DECFSZ      R12, 1, 0
0x004A	0xD7FC      	BRA         L_interrupt10
0x004C	0x2E0B      	DECFSZ      R11, 1, 0
0x004E	0xD7FA      	BRA         L_interrupt10
0x0050	0x0000      	NOP
0x0052	0x0000      	NOP
;main.c,53 :: 		modifier *= -1;
0x0054	0xF000C027  	MOVFF       _modifier, R0
0x0058	0xF001C028  	MOVFF       _modifier+1, R1
0x005C	0x0EFF      	MOVLW       255
0x005E	0x6E04      	MOVWF       R4 
0x0060	0x0EFF      	MOVLW       255
0x0062	0x6E05      	MOVWF       R5 
0x0064	0xD81A      	RCALL       _Mul_16X16_U
0x0066	0xF027C000  	MOVFF       R0, _modifier
0x006A	0xF028C001  	MOVFF       R1, _modifier+1
;main.c,54 :: 		pressed = 0;
0x006E	0x6A25      	CLRF        _pressed 
0x0070	0x6A26      	CLRF        _pressed+1 
;main.c,55 :: 		INTCON.INT0IF = 0;
0x0072	0x92F2      	BCF         INTCON, 1 
;main.c,57 :: 		}
L_interrupt9:
;main.c,61 :: 		}
L_end_interrupt:
L__interrupt17:
0x0074	0xF000C01A  	MOVFF       26, R0
0x0078	0xF001C019  	MOVFF       25, R1
0x007C	0xF002C018  	MOVFF       24, R2
0x0080	0xF00BC017  	MOVFF       23, R11
0x0084	0xF00CC016  	MOVFF       22, R12
0x0088	0xF00DC015  	MOVFF       21, R13
0x008C	0x0011      	RETFIE      1
; end of _interrupt
_init_interrupt:
;main.c,38 :: 		void init_interrupt(){
;main.c,39 :: 		INTCON.INT0IF = 0; //clear interrupt flag
0x008E	0x92F2      	BCF         INTCON, 1 
;main.c,40 :: 		INTCON2.INTEDG0 = 0; //interrupt 0 uses falling edge
0x0090	0x9CF1      	BCF         INTCON2, 6 
;main.c,41 :: 		INTCON.INT0IE = 1;//enables INT0 external interrupt
0x0092	0x88F2      	BSF         INTCON, 4 
;main.c,42 :: 		INTCON.INT0IF = 0; //clear interrupt flag
0x0094	0x92F2      	BCF         INTCON, 1 
;main.c,43 :: 		INTCON.GIEH = 1; //enables global interrupts
0x0096	0x8EF2      	BSF         INTCON, 7 
;main.c,46 :: 		}
L_end_init_interrupt:
0x0098	0x0012      	RETURN      0
; end of _init_interrupt
_Mul_16X16_U:
;__Lib_Math.c,440 :: 		
;__Lib_Math.c,447 :: 		
0x009A	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,448 :: 		
0x009C	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,449 :: 		
0x009E	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,450 :: 		
0x00A0	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,451 :: 		
0x00A2	0x0204      	MULWF       R4, 0
;__Lib_Math.c,453 :: 		
0x00A4	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,454 :: 		
0x00A8	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,455 :: 		
0x00AC	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,456 :: 		
0x00AE	0x0205      	MULWF       R5, 0
;__Lib_Math.c,458 :: 		
0x00B0	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,459 :: 		
0x00B4	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,460 :: 		
0x00B8	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,461 :: 		
0x00BA	0x0205      	MULWF       R5, 0
;__Lib_Math.c,463 :: 		
0x00BC	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,464 :: 		
0x00BE	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,465 :: 		
0x00C0	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,466 :: 		
0x00C2	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,467 :: 		
0x00C4	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,468 :: 		
0x00C6	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,469 :: 		
0x00C8	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,470 :: 		
0x00CA	0x0204      	MULWF       R4, 0
;__Lib_Math.c,472 :: 		
0x00CC	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,473 :: 		
0x00CE	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,474 :: 		
0x00D0	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,475 :: 		
0x00D2	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,476 :: 		
0x00D4	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,477 :: 		
0x00D6	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,479 :: 		
0x00D8	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,480 :: 		
0x00DC	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,481 :: 		
0x00E0	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,482 :: 		
0x00E4	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,485 :: 		
L_end_Mul_16X16_U:
0x00E8	0x0012      	RETURN      0
; end of _Mul_16X16_U
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x00EA	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x00EC	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x00F0	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x00F2	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x00F4	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x00F6	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x00F8	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x00FA	0xF000ECC2  	CALL        388, 0
;main.c,8 :: 		void main() {
;main.c,10 :: 		ADCON1      |= 15; //sets all pins as digital i/o
0x00FE	0x0E0F      	MOVLW       15
0x0100	0x12C1      	IORWF       ADCON1, 1 
;main.c,11 :: 		TRISB       |= 1; //sets RB0 as input
0x0102	0x8093      	BSF         TRISB, 0 
;main.c,12 :: 		TRISD        = 0; //all pins at port d are outputs for the 7-seg
0x0104	0x6A95      	CLRF        TRISD 
;main.c,13 :: 		INTCON2.RBPU = 0; //enable weak interal pullups for port b
0x0106	0x9EF1      	BCF         INTCON2, 7 
;main.c,14 :: 		LATD = 0;
0x0108	0x6A8C      	CLRF        LATD 
;main.c,16 :: 		init_interrupt();
0x010A	0xDFC1      	RCALL       _init_interrupt
;main.c,19 :: 		for(;;){
L_main0:
;main.c,21 :: 		num += modifier;
0x010C	0x5027      	MOVF        _modifier, 0 
0x010E	0x2429      	ADDWF       _num, 0 
0x0110	0x6E01      	MOVWF       R1 
0x0112	0x5028      	MOVF        _modifier+1, 0 
0x0114	0x202A      	ADDWFC      _num+1, 0 
0x0116	0x6E02      	MOVWF       R2 
0x0118	0xF029C001  	MOVFF       R1, _num
0x011C	0xF02AC002  	MOVFF       R2, _num+1
;main.c,22 :: 		if(num == -1) {num = 9;}
0x0120	0x0EFF      	MOVLW       255
0x0122	0x1802      	XORWF       R2, 0 
0x0124	0xE102      	BNZ         L__main13
0x0126	0x0EFF      	MOVLW       255
0x0128	0x1801      	XORWF       R1, 0 
L__main13:
0x012A	0xE105      	BNZ         L_main3
0x012C	0x0E09      	MOVLW       9
0x012E	0x6E29      	MOVWF       _num 
0x0130	0x0E00      	MOVLW       0
0x0132	0x6E2A      	MOVWF       _num+1 
0x0134	0xD008      	BRA         L_main4
L_main3:
;main.c,23 :: 		else if(num == 10){num = 0;}
0x0136	0x0E00      	MOVLW       0
0x0138	0x182A      	XORWF       _num+1, 0 
0x013A	0xE102      	BNZ         L__main14
0x013C	0x0E0A      	MOVLW       10
0x013E	0x1829      	XORWF       _num, 0 
L__main14:
0x0140	0xE102      	BNZ         L_main5
0x0142	0x6A29      	CLRF        _num 
0x0144	0x6A2A      	CLRF        _num+1 
L_main5:
L_main4:
;main.c,25 :: 		LATD = numCodes[num];
0x0146	0x0E1B      	MOVLW       _numCodes
0x0148	0x2429      	ADDWF       _num, 0 
0x014A	0x6EE9      	MOVWF       FSR0L 
0x014C	0x0E00      	MOVLW       hi_addr(_numCodes)
0x014E	0x202A      	ADDWFC      _num+1, 0 
0x0150	0x6EEA      	MOVWF       FSR0L+1 
0x0152	0xFF8CCFEE  	MOVFF       POSTINC0, LATD
;main.c,30 :: 		delay_ms(1000);
0x0156	0x0E1A      	MOVLW       26
0x0158	0x6E0B      	MOVWF       R11, 0
0x015A	0x0E5E      	MOVLW       94
0x015C	0x6E0C      	MOVWF       R12, 0
0x015E	0x0E6E      	MOVLW       110
0x0160	0x6E0D      	MOVWF       R13, 0
L_main6:
0x0162	0x2E0D      	DECFSZ      R13, 1, 0
0x0164	0xD7FE      	BRA         L_main6
0x0166	0x2E0C      	DECFSZ      R12, 1, 0
0x0168	0xD7FC      	BRA         L_main6
0x016A	0x2E0B      	DECFSZ      R11, 1, 0
0x016C	0xD7FA      	BRA         L_main6
0x016E	0x0000      	NOP
;main.c,33 :: 		}
0x0170	0xD7CD      	BRA         L_main0
;main.c,35 :: 		}
L_end_main:
0x0172	0xD7FF      	BRA         $+0
; end of _main
0x0184	0xF01BEE10  	LFSR        1, 27
0x0188	0x0E10      	MOVLW       16
0x018A	0x6E00      	MOVWF       R0 
0x018C	0x0E01      	MOVLW       1
0x018E	0x6E01      	MOVWF       R1 
0x0190	0x0E74      	MOVLW       116
0x0192	0x6EF6      	MOVWF       4086 
0x0194	0x0E01      	MOVLW       1
0x0196	0x6EF7      	MOVWF       TBLPTRH 
0x0198	0x0E00      	MOVLW       0
0x019A	0x6EF8      	MOVWF       TBLPTRU 
0x019C	0xF000EC75  	CALL        234, 0
0x01A0	0x0012      	RETURN      0
;main.c,0 :: ?ICS_numCodes
0x0174	0x063F ;?ICS_numCodes+0
0x0176	0x4F5B ;?ICS_numCodes+2
0x0178	0x6D66 ;?ICS_numCodes+4
0x017A	0x077D ;?ICS_numCodes+6
0x017C	0x677F ;?ICS_numCodes+8
; end of ?ICS_numCodes
;main.c,0 :: ?ICS_pressed
0x017E	0x0000 ;?ICS_pressed+0
; end of ?ICS_pressed
;main.c,0 :: ?ICS_modifier
0x0180	0xFFFF ;?ICS_modifier+0
; end of ?ICS_modifier
;main.c,0 :: ?ICS_num
0x0182	0x0000 ;?ICS_num+0
; end of ?ICS_num
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008     [134]    _interrupt
0x008E      [12]    _init_interrupt
0x009A      [80]    _Mul_16X16_U
0x00EA      [16]    ___CC2DW
0x00FA     [122]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x001B      [10]    _numCodes
0x0025       [2]    _pressed
0x0027       [2]    _modifier
0x0029       [2]    _num
0x0F8C       [1]    LATD
0x0F93       [1]    TRISB
0x0F95       [1]    TRISD
0x0FC1       [1]    ADCON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0174      [10]    ?ICS_numCodes
0x017E       [2]    ?ICS_pressed
0x0180       [2]    ?ICS_modifier
0x0182       [2]    ?ICS_num
